function [callingApp, reportInfo, dataOverview] = InputArguments(rootFolder, userPath)
    callingApp = [];
    reportInfo = struct('Path',     struct('rootFolder',       rootFolder,                      ...
                                           'userPath',         userPath),                       ...
                        'Version',  struct('callingApp',       [],                              ...
                                           'reportLib',        report.Constants.ReportLib,      ...
                                           'reportTemplate',   [],                              ...
                                           'matlabRelease',    report.Constants.MatlabVersion), ...
                        'Model',    struct('Version',          'preview',           ... % 'preview' | 'final'
                                           'Name',             'Template 001/2024', ...
                                           'Config',           'PMEC_2024',         ...
                                           'Raw',              jsondecode(fileread(fullfile(rootFolder, 'Template', 'Template001_2024.json')))), ...
                        'Function', struct('Issue',            '123456',                     ...
                                           'Index',            '-1',                         ...
                                           'Receiver',         'analyzedData.InfoSet.Receiver',           ...
                                           'FreqStart',        'analyzedData.InfoSet.MetaData.FreqStart', ...
                                           'FreqStop',         'analyzedData.InfoSet.MetaData.FreqStop',  ...
                                           'Samples',          'numel(analyzedData.InfoSet.Data{1})',     ...
                                           'RelatedLocations', 'strjoin(analyzedData.InfoSet.GPS.Location, '', '')', ...
                                           'Image_Pumpkin',    'eval.imgPumpkin(reportInfo, analyzedData, imgSettings)', ...
                                           'Image_Surf',       'eval.imgSurf(reportInfo, analyzedData, imgSettings)', ...
                                           'imgOrdinary1',     'eval.imgOrdinary(reportInfo, analyzedData, imgSettings)', ...
                                           'Table_Ordinary',   'eval.tableOrdinary(reportInfo, analyzedData, tableSettings)', ...
                                           'InternalTable1',   'analyzedData.HTML'));

    specData    = struct('Receiver', 'R&S FSL30', 'MetaData', struct('FreqStart',  88e+6, 'FreqStop', 108e+6), 'Data', [], 'GPS', struct('Location', {{'Salvador/BA', 'Recife/PE'}}));
    specData(2) = struct('Receiver', 'R&S FSVR',  'MetaData', struct('FreqStart', 470e+6, 'FreqStop', 698e+6), 'Data', [], 'GPS', struct('Location', {{'Rio de Janeiro/RJ', 'Blumenau/SC'}}));

    specData(1).Data = {[1 10 100]};
    specData(2).Data = {1:100};

    % Imagens e tabelas de teste...
    T11 = table({{'Sanchez', 'Carlos', 'John'}; ["Johnson", "Marcus", "Andre"]; 100; [10 20 30]; 'Brown'}, [38;43;38;40;49], logical([1;0;1;0;1]), [71;69;64;67;64], [176;163;131;133;119], [124; 109; 125; 117; 122], ["124"; "109"; "125"; "117"; "122"]);
    I11 = fullfile('D:\InovaFiscaliza\Miscellaneous\ReportGenerator\img_external', 'LT_mosaic.png');
    I12 = fullfile('D:\InovaFiscaliza\Miscellaneous\ReportGenerator\img_external', 'LT_Pin.png');
    
    T21 = table({'Eric'; "Marina"; 100; 10; {'Isa', 'Vicente'}}, [28;33;28;30;39], logical([1;0;1;0;1]), [71;69;64;67;64], [176;163;131;133;119], [124; 109; 125; 117; 122], ["124"; "109"; "125"; "117"; "122"]);
    I21 = fullfile('D:\InovaFiscaliza\Miscellaneous\ReportGenerator\img_external', 'LT_redmine.png');
    I22 = fullfile('D:\InovaFiscaliza\Miscellaneous\ReportGenerator\img_external', 'LT_SEI.png');

    dataOverview            = struct('ID', 'IRPF', 'InfoSet', specData(1), 'HTML', struct('Component', {},  'Source', {},  'Value', {}));
    dataOverview(1).HTML(1) = struct('Component', 'Text',  'Source', 'txtOrdinary1', 'Value', 'Nota relacionada ao primeiro fluxo...');
    dataOverview(1).HTML(2) = struct('Component', 'Table', 'Source', 'tblOrdinary1', 'Value', T11);
    dataOverview(1).HTML(3) = struct('Component', 'Table', 'Source', 'tblOrdinary2', 'Value', struct('Path', 'D:\InovaFiscaliza\Miscellaneous\ReportGenerator\table_external\RFDataHub_2024.02.18_T11.33.15.xlsx', 'SheetID', 1));
    dataOverview(1).HTML(4) = struct('Component', 'Image', 'Source', 'imgOrdinary1', 'Value', I11);
    dataOverview(1).HTML(5) = struct('Component', 'Image', 'Source', 'imgOrdinary2', 'Value', I12);

    dataOverview(2)         = struct('ID', 'ICMS', 'InfoSet', specData(2), 'HTML', struct('Component', {},  'Source', {},  'Value', {}));
    dataOverview(2).HTML(1) = struct('Component', 'Text',  'Source', 'txtOrdinary1', 'Value', 'Nota relacionada ao segundo fluxo...');
    dataOverview(2).HTML(2) = struct('Component', 'Table', 'Source', 'tblOrdinary1', 'Value', T21);
    dataOverview(2).HTML(3) = struct('Component', 'Image', 'Source', 'imgOrdinary1', 'Value', I21);
    dataOverview(2).HTML(4) = struct('Component', 'Image', 'Source', 'imgOrdinary2', 'Value', I22);
end